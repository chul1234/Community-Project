
# =======================================================
# DB 사용자 관리 (USERS) 테이블 관련 SQL
# =======================================================

# users 테이블 관련 기본 쿼리
user.insert=INSERT INTO users (user_id, name, phone, email, password) VALUES (?, ?, ?, ?, ?)
user.update=UPDATE users SET name = ?, phone = ?, email = ? WHERE user_id = ?
user.delete.by_user_id=DELETE FROM users WHERE user_id = ?

# [최종 수정] 로그인 및 헤더 정보용 쿼리: role_ids와 role_names를 모두 가져옵니다.
user.select.by_user_id=SELECT u.*, GROUP_CONCAT(r.role_id SEPARATOR ', ') as role_ids, GROUP_CONCAT(r.role_name SEPARATOR ', ') as role_names FROM users u LEFT JOIN users_roles ur ON u.user_id = ur.user_id LEFT JOIN roles r ON ur.role_id = r.role_id WHERE u.user_id = ? GROUP BY u.user_id

# [최종 수정] 사용자 목록 조회용 쿼리: 역할 ID(role_ids)와 역할 이름(role_names)을 모두 가져옵니다.
user.select.all=SELECT u.*, GROUP_CONCAT(r.role_id SEPARATOR ', ') as role_ids, GROUP_CONCAT(r.role_name SEPARATOR ', ') as role_names FROM users u LEFT JOIN users_roles ur ON u.user_id = ur.user_id LEFT JOIN roles r ON ur.role_id = r.role_id GROUP BY u.user_id

# users_roles 관련 쿼리
user_roles.delete.by_user_id=DELETE FROM users_roles WHERE user_id = ?
user_roles.insert=INSERT INTO users_roles (user_id, role_id) VALUES (?, ?)

# =======================================================
# 게시물(POSTS) 테이블 관련 SQL
# =======================================================

# 게시글 전체 목록 조회 (작성자 이름 포함, 최신순 정렬)
post.select.all=SELECT p.post_id, p.title, p.user_id, u.name as author_name, p.created_at FROM posts p JOIN users u ON p.user_id = u.user_id ORDER BY p.post_id DESC

# 게시글 생성을 위한 INSERT 쿼리
post.insert=INSERT INTO posts (title, content, user_id) VALUES (?, ?, ?)

# 특정 ID의 게시글 하나만 조회 (작성자 이름 포함)
post.select.by_id=SELECT p.post_id, p.title, p.content, p.user_id, u.name as author_name, p.created_at FROM posts p JOIN users u ON p.user_id = u.user_id WHERE p.post_id = ?

# 특정 ID의 게시글 수정
post.update=UPDATE posts SET title = ?, content = ? WHERE post_id = ?

# 특정 ID의 게시글 삭제
post.delete.by_id=DELETE FROM posts WHERE post_id = ?

# =======================================================
# 댓글(comments) 테이블 관련 SQL
# =======================================================

# 특정 게시글의 모든 댓글 조회 (작성자 이름 포함, 오래된 순 정렬)
comment.select.by_post_id=SELECT c.comment_id, c.post_id, c.content, c.user_id, u.name as author_name, c.created_at FROM comments c JOIN users u ON c.user_id = u.user_id WHERE c.post_id = ? ORDER BY c.comment_id ASC

# 특정 ID의 댓글 하나만 조회
comment.select.by_id=SELECT * FROM comments WHERE comment_id = ?

# 댓글 생성을 위한 INSERT 쿼리
comment.insert=INSERT INTO comments (post_id, content, user_id) VALUES (?, ?, ?)

# 댓글 수정을 위한 UPDATE 쿼리
comment.update=UPDATE comments SET content = ? WHERE comment_id = ?

# 댓글 삭제를 위한 DELETE 쿼리
comment.delete.by_id=DELETE FROM comments WHERE comment_id = ?

# =======================================================
# 메뉴(MENUS) 테이블 관련 SQL
# =======================================================

# 메뉴 전체 목록 조회 (depth 오름차순, priority 오름차순 정렬)
menu.select.all_sorted=SELECT * FROM menus ORDER BY depth ASC, priority ASC